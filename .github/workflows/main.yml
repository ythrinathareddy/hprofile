#ci pipeline start, code checkout, test, build, scan, publish
name: action test
on: workflow_dispatch
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: code checkout
        uses: actions/checkout@v4

      - name: mavan test
        run: mvn test

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: list the current directory
        run: ls -a
              
      - name: Print Contents of the Target Folder
        run: |
          cd target
          pwd
          ls -a
    #- name: set java 11
       # uses: actions/setup-java@v3
        #with:
         # distribution: 'temurin' 
          #java-version: '11'
# Setup sonar-scanner
      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7
# Run sonar-scanner
      - name: SonarQube Scan 
        run: sonar-scanner 
            -Dsonar.host.url=${{ secrets.SONAR_URL }} 
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} 
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.source=src/
            -Dsonar.junit.reportsPath=target/surefire-reports/ 
            -Dsonar.jacoco.reportsPath=target/jacoco.exec 
            -Dsonar.java.checkstyle.reportsPath=target/checkstyle-result.xml 
            -Dsonar.java.binaries=target/test-classes/com/visualpathit/account
# Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
# Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_URL }} #OPTIONAL
     # Use the variable in the upload artifact step
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: vprofile
          path: /home/runner/work/hprofile/hprofile/target
          

#ci pipeline completed

#cd pipeline start
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps: 
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: vprofile
          path: /home/runner/work/hp
      - name: show folder structure
        run: ls -R



      
      
      